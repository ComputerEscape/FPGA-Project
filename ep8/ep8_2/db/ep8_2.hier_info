|ep8_2
CLOCK2_50 => ~NO_FANOUT~
CLOCK3_50 => ~NO_FANOUT~
CLOCK4_50 => ~NO_FANOUT~
CLOCK_50 => CLOCK_50.IN1
LEDR[0] << keyboard:mykey.port9
LEDR[1] << keyboard:mykey.port10
LEDR[2] << keyboard:mykey.port11
LEDR[3] << <GND>
LEDR[4] << <GND>
LEDR[5] << <GND>
LEDR[6] << <GND>
LEDR[7] << <GND>
LEDR[8] << <GND>
LEDR[9] << <GND>
HEX0[0] << keyboard:mykey.port3
HEX0[1] << keyboard:mykey.port3
HEX0[2] << keyboard:mykey.port3
HEX0[3] << keyboard:mykey.port3
HEX0[4] << keyboard:mykey.port3
HEX0[5] << keyboard:mykey.port3
HEX0[6] << keyboard:mykey.port3
HEX1[0] << keyboard:mykey.port4
HEX1[1] << keyboard:mykey.port4
HEX1[2] << keyboard:mykey.port4
HEX1[3] << keyboard:mykey.port4
HEX1[4] << keyboard:mykey.port4
HEX1[5] << keyboard:mykey.port4
HEX1[6] << keyboard:mykey.port4
HEX2[0] << keyboard:mykey.port5
HEX2[1] << keyboard:mykey.port5
HEX2[2] << keyboard:mykey.port5
HEX2[3] << keyboard:mykey.port5
HEX2[4] << keyboard:mykey.port5
HEX2[5] << keyboard:mykey.port5
HEX2[6] << keyboard:mykey.port5
HEX3[0] << keyboard:mykey.port6
HEX3[1] << keyboard:mykey.port6
HEX3[2] << keyboard:mykey.port6
HEX3[3] << keyboard:mykey.port6
HEX3[4] << keyboard:mykey.port6
HEX3[5] << keyboard:mykey.port6
HEX3[6] << keyboard:mykey.port6
HEX4[0] << keyboard:mykey.port7
HEX4[1] << keyboard:mykey.port7
HEX4[2] << keyboard:mykey.port7
HEX4[3] << keyboard:mykey.port7
HEX4[4] << keyboard:mykey.port7
HEX4[5] << keyboard:mykey.port7
HEX4[6] << keyboard:mykey.port7
HEX5[0] << keyboard:mykey.port8
HEX5[1] << keyboard:mykey.port8
HEX5[2] << keyboard:mykey.port8
HEX5[3] << keyboard:mykey.port8
HEX5[4] << keyboard:mykey.port8
HEX5[5] << keyboard:mykey.port8
HEX5[6] << keyboard:mykey.port8
PS2_CLK <> keyboard:mykey.port1
PS2_CLK2 <> <UNC>
PS2_DAT <> keyboard:mykey.port2
PS2_DAT2 <> <UNC>


|ep8_2|keyboard:mykey
clk => clk.IN4
ps2_clk => ps2_clk.IN1
ps2_data => ps2_data.IN1
hex0[0] <= code:co.port2
hex0[1] <= code:co.port2
hex0[2] <= code:co.port2
hex0[3] <= code:co.port2
hex0[4] <= code:co.port2
hex0[5] <= code:co.port2
hex0[6] <= code:co.port2
hex1[0] <= code:co.port3
hex1[1] <= code:co.port3
hex1[2] <= code:co.port3
hex1[3] <= code:co.port3
hex1[4] <= code:co.port3
hex1[5] <= code:co.port3
hex1[6] <= code:co.port3
hex2[0] <= ASCII:ascii.port5
hex2[1] <= ASCII:ascii.port5
hex2[2] <= ASCII:ascii.port5
hex2[3] <= ASCII:ascii.port5
hex2[4] <= ASCII:ascii.port5
hex2[5] <= ASCII:ascii.port5
hex2[6] <= ASCII:ascii.port5
hex3[0] <= ASCII:ascii.port6
hex3[1] <= ASCII:ascii.port6
hex3[2] <= ASCII:ascii.port6
hex3[3] <= ASCII:ascii.port6
hex3[4] <= ASCII:ascii.port6
hex3[5] <= ASCII:ascii.port6
hex3[6] <= ASCII:ascii.port6
hex4[0] <= count:ct.port1
hex4[1] <= count:ct.port1
hex4[2] <= count:ct.port1
hex4[3] <= count:ct.port1
hex4[4] <= count:ct.port1
hex4[5] <= count:ct.port1
hex4[6] <= count:ct.port1
hex5[0] <= count:ct.port2
hex5[1] <= count:ct.port2
hex5[2] <= count:ct.port2
hex5[3] <= count:ct.port2
hex5[4] <= count:ct.port2
hex5[5] <= count:ct.port2
hex5[6] <= count:ct.port2
up <= up.DB_MAX_OUTPUT_PORT_TYPE
ctrlc <= ctrlc~reg0.DB_MAX_OUTPUT_PORT_TYPE
ctrlv <= ctrlv~reg0.DB_MAX_OUTPUT_PORT_TYPE


|ep8_2|keyboard:mykey|my_clock:mycl
clk => clk_1s~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk_1s <= clk_1s~reg0.DB_MAX_OUTPUT_PORT_TYPE


|ep8_2|keyboard:mykey|ps2_keyboard:key
clk => fifo.we_a.CLK
clk => fifo.waddr_a[2].CLK
clk => fifo.waddr_a[1].CLK
clk => fifo.waddr_a[0].CLK
clk => fifo.data_a[7].CLK
clk => fifo.data_a[6].CLK
clk => fifo.data_a[5].CLK
clk => fifo.data_a[4].CLK
clk => fifo.data_a[3].CLK
clk => fifo.data_a[2].CLK
clk => fifo.data_a[1].CLK
clk => fifo.data_a[0].CLK
clk => buffer[0].CLK
clk => buffer[1].CLK
clk => buffer[2].CLK
clk => buffer[3].CLK
clk => buffer[4].CLK
clk => buffer[5].CLK
clk => buffer[6].CLK
clk => buffer[7].CLK
clk => buffer[8].CLK
clk => buffer[9].CLK
clk => ready~reg0.CLK
clk => overflow~reg0.CLK
clk => r_ptr[0].CLK
clk => r_ptr[1].CLK
clk => r_ptr[2].CLK
clk => w_ptr[0].CLK
clk => w_ptr[1].CLK
clk => w_ptr[2].CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => ps2_clk_sync[0].CLK
clk => ps2_clk_sync[1].CLK
clk => ps2_clk_sync[2].CLK
clk => fifo.CLK0
clrn => count.OUTPUTSELECT
clrn => count.OUTPUTSELECT
clrn => count.OUTPUTSELECT
clrn => count.OUTPUTSELECT
clrn => w_ptr.OUTPUTSELECT
clrn => w_ptr.OUTPUTSELECT
clrn => w_ptr.OUTPUTSELECT
clrn => r_ptr.OUTPUTSELECT
clrn => r_ptr.OUTPUTSELECT
clrn => r_ptr.OUTPUTSELECT
clrn => overflow.OUTPUTSELECT
clrn => ready.OUTPUTSELECT
clrn => fifo.OUTPUTSELECT
clrn => buffer[0].ENA
clrn => buffer[1].ENA
clrn => buffer[2].ENA
clrn => buffer[3].ENA
clrn => buffer[4].ENA
clrn => buffer[5].ENA
clrn => buffer[6].ENA
clrn => buffer[7].ENA
clrn => buffer[8].ENA
clrn => buffer[9].ENA
ps2_clk => ps2_clk_sync[0].DATAIN
ps2_data => always1.IN1
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
data[0] <= fifo.DATAOUT
data[1] <= fifo.DATAOUT1
data[2] <= fifo.DATAOUT2
data[3] <= fifo.DATAOUT3
data[4] <= fifo.DATAOUT4
data[5] <= fifo.DATAOUT5
data[6] <= fifo.DATAOUT6
data[7] <= fifo.DATAOUT7
ready <= ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
nextdata_n => r_ptr.OUTPUTSELECT
nextdata_n => r_ptr.OUTPUTSELECT
nextdata_n => r_ptr.OUTPUTSELECT
nextdata_n => ready.OUTPUTSELECT
overflow <= overflow~reg0.DB_MAX_OUTPUT_PORT_TYPE


|ep8_2|keyboard:mykey|ROM1:r1
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
clock => clock.IN1
q[0] <= altsyncram:altsyncram_component.q_a
q[1] <= altsyncram:altsyncram_component.q_a
q[2] <= altsyncram:altsyncram_component.q_a
q[3] <= altsyncram:altsyncram_component.q_a
q[4] <= altsyncram:altsyncram_component.q_a
q[5] <= altsyncram:altsyncram_component.q_a
q[6] <= altsyncram:altsyncram_component.q_a
q[7] <= altsyncram:altsyncram_component.q_a


|ep8_2|keyboard:mykey|ROM1:r1|altsyncram:altsyncram_component
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_a[3] => ~NO_FANOUT~
data_a[4] => ~NO_FANOUT~
data_a[5] => ~NO_FANOUT~
data_a[6] => ~NO_FANOUT~
data_a[7] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_q8f1:auto_generated.address_a[0]
address_a[1] => altsyncram_q8f1:auto_generated.address_a[1]
address_a[2] => altsyncram_q8f1:auto_generated.address_a[2]
address_a[3] => altsyncram_q8f1:auto_generated.address_a[3]
address_a[4] => altsyncram_q8f1:auto_generated.address_a[4]
address_a[5] => altsyncram_q8f1:auto_generated.address_a[5]
address_a[6] => altsyncram_q8f1:auto_generated.address_a[6]
address_a[7] => altsyncram_q8f1:auto_generated.address_a[7]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_q8f1:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_q8f1:auto_generated.q_a[0]
q_a[1] <= altsyncram_q8f1:auto_generated.q_a[1]
q_a[2] <= altsyncram_q8f1:auto_generated.q_a[2]
q_a[3] <= altsyncram_q8f1:auto_generated.q_a[3]
q_a[4] <= altsyncram_q8f1:auto_generated.q_a[4]
q_a[5] <= altsyncram_q8f1:auto_generated.q_a[5]
q_a[6] <= altsyncram_q8f1:auto_generated.q_a[6]
q_a[7] <= altsyncram_q8f1:auto_generated.q_a[7]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|ep8_2|keyboard:mykey|ROM1:r1|altsyncram:altsyncram_component|altsyncram_q8f1:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[7] => ~NO_FANOUT~
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT
q_a[7] <= ram_block1a7.PORTADATAOUT


|ep8_2|keyboard:mykey|ROM2:r2
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
clock => clock.IN1
q[0] <= altsyncram:altsyncram_component.q_a
q[1] <= altsyncram:altsyncram_component.q_a
q[2] <= altsyncram:altsyncram_component.q_a
q[3] <= altsyncram:altsyncram_component.q_a
q[4] <= altsyncram:altsyncram_component.q_a
q[5] <= altsyncram:altsyncram_component.q_a
q[6] <= altsyncram:altsyncram_component.q_a
q[7] <= altsyncram:altsyncram_component.q_a


|ep8_2|keyboard:mykey|ROM2:r2|altsyncram:altsyncram_component
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_a[3] => ~NO_FANOUT~
data_a[4] => ~NO_FANOUT~
data_a[5] => ~NO_FANOUT~
data_a[6] => ~NO_FANOUT~
data_a[7] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_r8f1:auto_generated.address_a[0]
address_a[1] => altsyncram_r8f1:auto_generated.address_a[1]
address_a[2] => altsyncram_r8f1:auto_generated.address_a[2]
address_a[3] => altsyncram_r8f1:auto_generated.address_a[3]
address_a[4] => altsyncram_r8f1:auto_generated.address_a[4]
address_a[5] => altsyncram_r8f1:auto_generated.address_a[5]
address_a[6] => altsyncram_r8f1:auto_generated.address_a[6]
address_a[7] => altsyncram_r8f1:auto_generated.address_a[7]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_r8f1:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_r8f1:auto_generated.q_a[0]
q_a[1] <= altsyncram_r8f1:auto_generated.q_a[1]
q_a[2] <= altsyncram_r8f1:auto_generated.q_a[2]
q_a[3] <= altsyncram_r8f1:auto_generated.q_a[3]
q_a[4] <= altsyncram_r8f1:auto_generated.q_a[4]
q_a[5] <= altsyncram_r8f1:auto_generated.q_a[5]
q_a[6] <= altsyncram_r8f1:auto_generated.q_a[6]
q_a[7] <= altsyncram_r8f1:auto_generated.q_a[7]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|ep8_2|keyboard:mykey|ROM2:r2|altsyncram:altsyncram_component|altsyncram_r8f1:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[7] => ~NO_FANOUT~
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT
q_a[7] <= ram_block1a7.PORTADATAOUT


|ep8_2|keyboard:mykey|code:co
pre => always0.IN1
my_data[0] => my_data[0].IN1
my_data[1] => my_data[1].IN1
my_data[2] => my_data[2].IN1
my_data[3] => my_data[3].IN1
my_data[4] => my_data[4].IN1
my_data[5] => my_data[5].IN1
my_data[6] => my_data[6].IN1
my_data[7] => my_data[7].IN1
hex0[0] <= my_hex:h0.port2
hex0[1] <= my_hex:h0.port2
hex0[2] <= my_hex:h0.port2
hex0[3] <= my_hex:h0.port2
hex0[4] <= my_hex:h0.port2
hex0[5] <= my_hex:h0.port2
hex0[6] <= my_hex:h0.port2
hex1[0] <= my_hex:h1.port2
hex1[1] <= my_hex:h1.port2
hex1[2] <= my_hex:h1.port2
hex1[3] <= my_hex:h1.port2
hex1[4] <= my_hex:h1.port2
hex1[5] <= my_hex:h1.port2
hex1[6] <= my_hex:h1.port2


|ep8_2|keyboard:mykey|code:co|my_hex:h0
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
x[0] => Decoder0.IN3
x[1] => Decoder0.IN2
x[2] => Decoder0.IN1
x[3] => Decoder0.IN0
y[0] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[1] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[2] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[3] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[4] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[5] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[6] <= y.DB_MAX_OUTPUT_PORT_TYPE


|ep8_2|keyboard:mykey|code:co|my_hex:h1
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
x[0] => Decoder0.IN3
x[1] => Decoder0.IN2
x[2] => Decoder0.IN1
x[3] => Decoder0.IN0
y[0] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[1] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[2] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[3] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[4] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[5] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[6] <= y.DB_MAX_OUTPUT_PORT_TYPE


|ep8_2|keyboard:mykey|ASCII:ascii
pre => always0.IN1
up => ascii.OUTPUTSELECT
up => ascii.OUTPUTSELECT
up => ascii.OUTPUTSELECT
up => ascii.OUTPUTSELECT
up => ascii.OUTPUTSELECT
up => ascii.OUTPUTSELECT
up => ascii.OUTPUTSELECT
up => ascii.OUTPUTSELECT
my_data[0] => Equal0.IN7
my_data[1] => Equal0.IN6
my_data[2] => Equal0.IN5
my_data[3] => Equal0.IN4
my_data[4] => Equal0.IN3
my_data[5] => Equal0.IN2
my_data[6] => Equal0.IN1
my_data[7] => Equal0.IN0
ascii1[0] => ascii.DATAA
ascii1[1] => ascii.DATAA
ascii1[2] => ascii.DATAA
ascii1[3] => ascii.DATAA
ascii1[4] => ascii.DATAA
ascii1[5] => ascii.DATAA
ascii1[6] => ascii.DATAA
ascii1[7] => ascii.DATAA
ascii2[0] => ascii.DATAB
ascii2[1] => ascii.DATAB
ascii2[2] => ascii.DATAB
ascii2[3] => ascii.DATAB
ascii2[4] => ascii.DATAB
ascii2[5] => ascii.DATAB
ascii2[6] => ascii.DATAB
ascii2[7] => ascii.DATAB
hex2[0] <= my_hex:h2.port2
hex2[1] <= my_hex:h2.port2
hex2[2] <= my_hex:h2.port2
hex2[3] <= my_hex:h2.port2
hex2[4] <= my_hex:h2.port2
hex2[5] <= my_hex:h2.port2
hex2[6] <= my_hex:h2.port2
hex3[0] <= my_hex:h3.port2
hex3[1] <= my_hex:h3.port2
hex3[2] <= my_hex:h3.port2
hex3[3] <= my_hex:h3.port2
hex3[4] <= my_hex:h3.port2
hex3[5] <= my_hex:h3.port2
hex3[6] <= my_hex:h3.port2


|ep8_2|keyboard:mykey|ASCII:ascii|my_hex:h2
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
x[0] => Decoder0.IN3
x[1] => Decoder0.IN2
x[2] => Decoder0.IN1
x[3] => Decoder0.IN0
y[0] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[1] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[2] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[3] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[4] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[5] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[6] <= y.DB_MAX_OUTPUT_PORT_TYPE


|ep8_2|keyboard:mykey|ASCII:ascii|my_hex:h3
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
x[0] => Decoder0.IN3
x[1] => Decoder0.IN2
x[2] => Decoder0.IN1
x[3] => Decoder0.IN0
y[0] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[1] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[2] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[3] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[4] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[5] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[6] <= y.DB_MAX_OUTPUT_PORT_TYPE


|ep8_2|keyboard:mykey|count:ct
mycount[0] => mycount[0].IN1
mycount[1] => mycount[1].IN1
mycount[2] => mycount[2].IN1
mycount[3] => mycount[3].IN1
mycount[4] => mycount[4].IN1
mycount[5] => mycount[5].IN1
mycount[6] => mycount[6].IN1
mycount[7] => mycount[7].IN1
hex4[0] <= my_hex:h4.port2
hex4[1] <= my_hex:h4.port2
hex4[2] <= my_hex:h4.port2
hex4[3] <= my_hex:h4.port2
hex4[4] <= my_hex:h4.port2
hex4[5] <= my_hex:h4.port2
hex4[6] <= my_hex:h4.port2
hex5[0] <= my_hex:h5.port2
hex5[1] <= my_hex:h5.port2
hex5[2] <= my_hex:h5.port2
hex5[3] <= my_hex:h5.port2
hex5[4] <= my_hex:h5.port2
hex5[5] <= my_hex:h5.port2
hex5[6] <= my_hex:h5.port2


|ep8_2|keyboard:mykey|count:ct|my_hex:h4
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
x[0] => Decoder0.IN3
x[1] => Decoder0.IN2
x[2] => Decoder0.IN1
x[3] => Decoder0.IN0
y[0] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[1] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[2] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[3] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[4] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[5] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[6] <= y.DB_MAX_OUTPUT_PORT_TYPE


|ep8_2|keyboard:mykey|count:ct|my_hex:h5
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
x[0] => Decoder0.IN3
x[1] => Decoder0.IN2
x[2] => Decoder0.IN1
x[3] => Decoder0.IN0
y[0] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[1] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[2] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[3] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[4] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[5] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[6] <= y.DB_MAX_OUTPUT_PORT_TYPE


